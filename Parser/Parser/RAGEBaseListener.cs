//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     ANTLR Version: 4.6
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

// Generated from RAGE.g4 by ANTLR 4.6

// Unreachable code detected
#pragma warning disable 0162
// The variable '...' is assigned but its value is never used
#pragma warning disable 0219
// Missing XML comment for publicly visible type or member '...'
#pragma warning disable 1591
// Ambiguous reference in cref attribute
#pragma warning disable 419


using Antlr4.Runtime.Misc;
using IErrorNode = Antlr4.Runtime.Tree.IErrorNode;
using ITerminalNode = Antlr4.Runtime.Tree.ITerminalNode;
using IToken = Antlr4.Runtime.IToken;
using ParserRuleContext = Antlr4.Runtime.ParserRuleContext;

/// <summary>
/// This class provides an empty implementation of <see cref="IRAGEListener"/>,
/// which can be extended to create a listener which only needs to handle a subset
/// of the available methods.
/// </summary>
[System.CodeDom.Compiler.GeneratedCode("ANTLR", "4.6")]
[System.CLSCompliant(false)]
public partial class RAGEBaseListener : IRAGEListener {
	/// <summary>
	/// Enter a parse tree produced by <see cref="RAGEParser.primaryExpression"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterPrimaryExpression([NotNull] RAGEParser.PrimaryExpressionContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="RAGEParser.primaryExpression"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitPrimaryExpression([NotNull] RAGEParser.PrimaryExpressionContext context) { }
	/// <summary>
	/// Enter a parse tree produced by <see cref="RAGEParser.postfixExpression"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterPostfixExpression([NotNull] RAGEParser.PostfixExpressionContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="RAGEParser.postfixExpression"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitPostfixExpression([NotNull] RAGEParser.PostfixExpressionContext context) { }
	/// <summary>
	/// Enter a parse tree produced by <see cref="RAGEParser.argumentExpressionList"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterArgumentExpressionList([NotNull] RAGEParser.ArgumentExpressionListContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="RAGEParser.argumentExpressionList"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitArgumentExpressionList([NotNull] RAGEParser.ArgumentExpressionListContext context) { }
	/// <summary>
	/// Enter a parse tree produced by <see cref="RAGEParser.unaryExpression"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterUnaryExpression([NotNull] RAGEParser.UnaryExpressionContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="RAGEParser.unaryExpression"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitUnaryExpression([NotNull] RAGEParser.UnaryExpressionContext context) { }
	/// <summary>
	/// Enter a parse tree produced by <see cref="RAGEParser.unaryOperator"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterUnaryOperator([NotNull] RAGEParser.UnaryOperatorContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="RAGEParser.unaryOperator"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitUnaryOperator([NotNull] RAGEParser.UnaryOperatorContext context) { }
	/// <summary>
	/// Enter a parse tree produced by <see cref="RAGEParser.castExpression"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterCastExpression([NotNull] RAGEParser.CastExpressionContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="RAGEParser.castExpression"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitCastExpression([NotNull] RAGEParser.CastExpressionContext context) { }
	/// <summary>
	/// Enter a parse tree produced by <see cref="RAGEParser.multiplicativeExpression"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterMultiplicativeExpression([NotNull] RAGEParser.MultiplicativeExpressionContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="RAGEParser.multiplicativeExpression"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitMultiplicativeExpression([NotNull] RAGEParser.MultiplicativeExpressionContext context) { }
	/// <summary>
	/// Enter a parse tree produced by <see cref="RAGEParser.additiveExpression"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterAdditiveExpression([NotNull] RAGEParser.AdditiveExpressionContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="RAGEParser.additiveExpression"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitAdditiveExpression([NotNull] RAGEParser.AdditiveExpressionContext context) { }
	/// <summary>
	/// Enter a parse tree produced by <see cref="RAGEParser.shiftExpression"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterShiftExpression([NotNull] RAGEParser.ShiftExpressionContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="RAGEParser.shiftExpression"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitShiftExpression([NotNull] RAGEParser.ShiftExpressionContext context) { }
	/// <summary>
	/// Enter a parse tree produced by <see cref="RAGEParser.relationalExpression"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterRelationalExpression([NotNull] RAGEParser.RelationalExpressionContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="RAGEParser.relationalExpression"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitRelationalExpression([NotNull] RAGEParser.RelationalExpressionContext context) { }
	/// <summary>
	/// Enter a parse tree produced by <see cref="RAGEParser.equalityExpression"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterEqualityExpression([NotNull] RAGEParser.EqualityExpressionContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="RAGEParser.equalityExpression"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitEqualityExpression([NotNull] RAGEParser.EqualityExpressionContext context) { }
	/// <summary>
	/// Enter a parse tree produced by <see cref="RAGEParser.andExpression"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterAndExpression([NotNull] RAGEParser.AndExpressionContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="RAGEParser.andExpression"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitAndExpression([NotNull] RAGEParser.AndExpressionContext context) { }
	/// <summary>
	/// Enter a parse tree produced by <see cref="RAGEParser.exclusiveOrExpression"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterExclusiveOrExpression([NotNull] RAGEParser.ExclusiveOrExpressionContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="RAGEParser.exclusiveOrExpression"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitExclusiveOrExpression([NotNull] RAGEParser.ExclusiveOrExpressionContext context) { }
	/// <summary>
	/// Enter a parse tree produced by <see cref="RAGEParser.inclusiveOrExpression"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterInclusiveOrExpression([NotNull] RAGEParser.InclusiveOrExpressionContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="RAGEParser.inclusiveOrExpression"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitInclusiveOrExpression([NotNull] RAGEParser.InclusiveOrExpressionContext context) { }
	/// <summary>
	/// Enter a parse tree produced by <see cref="RAGEParser.logicalAndExpression"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterLogicalAndExpression([NotNull] RAGEParser.LogicalAndExpressionContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="RAGEParser.logicalAndExpression"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitLogicalAndExpression([NotNull] RAGEParser.LogicalAndExpressionContext context) { }
	/// <summary>
	/// Enter a parse tree produced by <see cref="RAGEParser.logicalOrExpression"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterLogicalOrExpression([NotNull] RAGEParser.LogicalOrExpressionContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="RAGEParser.logicalOrExpression"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitLogicalOrExpression([NotNull] RAGEParser.LogicalOrExpressionContext context) { }
	/// <summary>
	/// Enter a parse tree produced by <see cref="RAGEParser.conditionalExpression"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterConditionalExpression([NotNull] RAGEParser.ConditionalExpressionContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="RAGEParser.conditionalExpression"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitConditionalExpression([NotNull] RAGEParser.ConditionalExpressionContext context) { }
	/// <summary>
	/// Enter a parse tree produced by <see cref="RAGEParser.assignmentExpression"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterAssignmentExpression([NotNull] RAGEParser.AssignmentExpressionContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="RAGEParser.assignmentExpression"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitAssignmentExpression([NotNull] RAGEParser.AssignmentExpressionContext context) { }
	/// <summary>
	/// Enter a parse tree produced by <see cref="RAGEParser.assignmentOperator"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterAssignmentOperator([NotNull] RAGEParser.AssignmentOperatorContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="RAGEParser.assignmentOperator"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitAssignmentOperator([NotNull] RAGEParser.AssignmentOperatorContext context) { }
	/// <summary>
	/// Enter a parse tree produced by <see cref="RAGEParser.expression"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterExpression([NotNull] RAGEParser.ExpressionContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="RAGEParser.expression"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitExpression([NotNull] RAGEParser.ExpressionContext context) { }
	/// <summary>
	/// Enter a parse tree produced by <see cref="RAGEParser.constantExpression"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterConstantExpression([NotNull] RAGEParser.ConstantExpressionContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="RAGEParser.constantExpression"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitConstantExpression([NotNull] RAGEParser.ConstantExpressionContext context) { }
	/// <summary>
	/// Enter a parse tree produced by <see cref="RAGEParser.declaration"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterDeclaration([NotNull] RAGEParser.DeclarationContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="RAGEParser.declaration"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitDeclaration([NotNull] RAGEParser.DeclarationContext context) { }
	/// <summary>
	/// Enter a parse tree produced by <see cref="RAGEParser.declarationSpecifiers"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterDeclarationSpecifiers([NotNull] RAGEParser.DeclarationSpecifiersContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="RAGEParser.declarationSpecifiers"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitDeclarationSpecifiers([NotNull] RAGEParser.DeclarationSpecifiersContext context) { }
	/// <summary>
	/// Enter a parse tree produced by <see cref="RAGEParser.declarationSpecifiers2"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterDeclarationSpecifiers2([NotNull] RAGEParser.DeclarationSpecifiers2Context context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="RAGEParser.declarationSpecifiers2"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitDeclarationSpecifiers2([NotNull] RAGEParser.DeclarationSpecifiers2Context context) { }
	/// <summary>
	/// Enter a parse tree produced by <see cref="RAGEParser.declarationSpecifier"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterDeclarationSpecifier([NotNull] RAGEParser.DeclarationSpecifierContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="RAGEParser.declarationSpecifier"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitDeclarationSpecifier([NotNull] RAGEParser.DeclarationSpecifierContext context) { }
	/// <summary>
	/// Enter a parse tree produced by <see cref="RAGEParser.initDeclaratorList"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterInitDeclaratorList([NotNull] RAGEParser.InitDeclaratorListContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="RAGEParser.initDeclaratorList"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitInitDeclaratorList([NotNull] RAGEParser.InitDeclaratorListContext context) { }
	/// <summary>
	/// Enter a parse tree produced by <see cref="RAGEParser.initDeclarator"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterInitDeclarator([NotNull] RAGEParser.InitDeclaratorContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="RAGEParser.initDeclarator"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitInitDeclarator([NotNull] RAGEParser.InitDeclaratorContext context) { }
	/// <summary>
	/// Enter a parse tree produced by <see cref="RAGEParser.storageClassSpecifier"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterStorageClassSpecifier([NotNull] RAGEParser.StorageClassSpecifierContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="RAGEParser.storageClassSpecifier"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitStorageClassSpecifier([NotNull] RAGEParser.StorageClassSpecifierContext context) { }
	/// <summary>
	/// Enter a parse tree produced by <see cref="RAGEParser.typeSpecifier"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterTypeSpecifier([NotNull] RAGEParser.TypeSpecifierContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="RAGEParser.typeSpecifier"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitTypeSpecifier([NotNull] RAGEParser.TypeSpecifierContext context) { }
	/// <summary>
	/// Enter a parse tree produced by <see cref="RAGEParser.structOrUnionSpecifier"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterStructOrUnionSpecifier([NotNull] RAGEParser.StructOrUnionSpecifierContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="RAGEParser.structOrUnionSpecifier"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitStructOrUnionSpecifier([NotNull] RAGEParser.StructOrUnionSpecifierContext context) { }
	/// <summary>
	/// Enter a parse tree produced by <see cref="RAGEParser.structOrUnion"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterStructOrUnion([NotNull] RAGEParser.StructOrUnionContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="RAGEParser.structOrUnion"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitStructOrUnion([NotNull] RAGEParser.StructOrUnionContext context) { }
	/// <summary>
	/// Enter a parse tree produced by <see cref="RAGEParser.structDeclarationList"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterStructDeclarationList([NotNull] RAGEParser.StructDeclarationListContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="RAGEParser.structDeclarationList"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitStructDeclarationList([NotNull] RAGEParser.StructDeclarationListContext context) { }
	/// <summary>
	/// Enter a parse tree produced by <see cref="RAGEParser.structDeclaration"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterStructDeclaration([NotNull] RAGEParser.StructDeclarationContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="RAGEParser.structDeclaration"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitStructDeclaration([NotNull] RAGEParser.StructDeclarationContext context) { }
	/// <summary>
	/// Enter a parse tree produced by <see cref="RAGEParser.specifierQualifierList"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterSpecifierQualifierList([NotNull] RAGEParser.SpecifierQualifierListContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="RAGEParser.specifierQualifierList"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitSpecifierQualifierList([NotNull] RAGEParser.SpecifierQualifierListContext context) { }
	/// <summary>
	/// Enter a parse tree produced by <see cref="RAGEParser.structDeclaratorList"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterStructDeclaratorList([NotNull] RAGEParser.StructDeclaratorListContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="RAGEParser.structDeclaratorList"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitStructDeclaratorList([NotNull] RAGEParser.StructDeclaratorListContext context) { }
	/// <summary>
	/// Enter a parse tree produced by <see cref="RAGEParser.structDeclarator"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterStructDeclarator([NotNull] RAGEParser.StructDeclaratorContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="RAGEParser.structDeclarator"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitStructDeclarator([NotNull] RAGEParser.StructDeclaratorContext context) { }
	/// <summary>
	/// Enter a parse tree produced by <see cref="RAGEParser.enumDeclarator"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterEnumDeclarator([NotNull] RAGEParser.EnumDeclaratorContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="RAGEParser.enumDeclarator"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitEnumDeclarator([NotNull] RAGEParser.EnumDeclaratorContext context) { }
	/// <summary>
	/// Enter a parse tree produced by <see cref="RAGEParser.enumSpecifier"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterEnumSpecifier([NotNull] RAGEParser.EnumSpecifierContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="RAGEParser.enumSpecifier"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitEnumSpecifier([NotNull] RAGEParser.EnumSpecifierContext context) { }
	/// <summary>
	/// Enter a parse tree produced by <see cref="RAGEParser.enumeratorList"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterEnumeratorList([NotNull] RAGEParser.EnumeratorListContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="RAGEParser.enumeratorList"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitEnumeratorList([NotNull] RAGEParser.EnumeratorListContext context) { }
	/// <summary>
	/// Enter a parse tree produced by <see cref="RAGEParser.enumerator"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterEnumerator([NotNull] RAGEParser.EnumeratorContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="RAGEParser.enumerator"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitEnumerator([NotNull] RAGEParser.EnumeratorContext context) { }
	/// <summary>
	/// Enter a parse tree produced by <see cref="RAGEParser.enumerationConstant"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterEnumerationConstant([NotNull] RAGEParser.EnumerationConstantContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="RAGEParser.enumerationConstant"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitEnumerationConstant([NotNull] RAGEParser.EnumerationConstantContext context) { }
	/// <summary>
	/// Enter a parse tree produced by <see cref="RAGEParser.typeQualifier"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterTypeQualifier([NotNull] RAGEParser.TypeQualifierContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="RAGEParser.typeQualifier"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitTypeQualifier([NotNull] RAGEParser.TypeQualifierContext context) { }
	/// <summary>
	/// Enter a parse tree produced by <see cref="RAGEParser.declarator"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterDeclarator([NotNull] RAGEParser.DeclaratorContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="RAGEParser.declarator"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitDeclarator([NotNull] RAGEParser.DeclaratorContext context) { }
	/// <summary>
	/// Enter a parse tree produced by <see cref="RAGEParser.directDeclarator"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterDirectDeclarator([NotNull] RAGEParser.DirectDeclaratorContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="RAGEParser.directDeclarator"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitDirectDeclarator([NotNull] RAGEParser.DirectDeclaratorContext context) { }
	/// <summary>
	/// Enter a parse tree produced by <see cref="RAGEParser.nestedParenthesesBlock"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterNestedParenthesesBlock([NotNull] RAGEParser.NestedParenthesesBlockContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="RAGEParser.nestedParenthesesBlock"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitNestedParenthesesBlock([NotNull] RAGEParser.NestedParenthesesBlockContext context) { }
	/// <summary>
	/// Enter a parse tree produced by <see cref="RAGEParser.pointer"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterPointer([NotNull] RAGEParser.PointerContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="RAGEParser.pointer"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitPointer([NotNull] RAGEParser.PointerContext context) { }
	/// <summary>
	/// Enter a parse tree produced by <see cref="RAGEParser.typeQualifierList"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterTypeQualifierList([NotNull] RAGEParser.TypeQualifierListContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="RAGEParser.typeQualifierList"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitTypeQualifierList([NotNull] RAGEParser.TypeQualifierListContext context) { }
	/// <summary>
	/// Enter a parse tree produced by <see cref="RAGEParser.parameterTypeList"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterParameterTypeList([NotNull] RAGEParser.ParameterTypeListContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="RAGEParser.parameterTypeList"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitParameterTypeList([NotNull] RAGEParser.ParameterTypeListContext context) { }
	/// <summary>
	/// Enter a parse tree produced by <see cref="RAGEParser.parameterList"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterParameterList([NotNull] RAGEParser.ParameterListContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="RAGEParser.parameterList"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitParameterList([NotNull] RAGEParser.ParameterListContext context) { }
	/// <summary>
	/// Enter a parse tree produced by <see cref="RAGEParser.parameterDeclaration"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterParameterDeclaration([NotNull] RAGEParser.ParameterDeclarationContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="RAGEParser.parameterDeclaration"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitParameterDeclaration([NotNull] RAGEParser.ParameterDeclarationContext context) { }
	/// <summary>
	/// Enter a parse tree produced by <see cref="RAGEParser.identifierList"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterIdentifierList([NotNull] RAGEParser.IdentifierListContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="RAGEParser.identifierList"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitIdentifierList([NotNull] RAGEParser.IdentifierListContext context) { }
	/// <summary>
	/// Enter a parse tree produced by <see cref="RAGEParser.typeName"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterTypeName([NotNull] RAGEParser.TypeNameContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="RAGEParser.typeName"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitTypeName([NotNull] RAGEParser.TypeNameContext context) { }
	/// <summary>
	/// Enter a parse tree produced by <see cref="RAGEParser.abstractDeclarator"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterAbstractDeclarator([NotNull] RAGEParser.AbstractDeclaratorContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="RAGEParser.abstractDeclarator"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitAbstractDeclarator([NotNull] RAGEParser.AbstractDeclaratorContext context) { }
	/// <summary>
	/// Enter a parse tree produced by <see cref="RAGEParser.typedefName"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterTypedefName([NotNull] RAGEParser.TypedefNameContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="RAGEParser.typedefName"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitTypedefName([NotNull] RAGEParser.TypedefNameContext context) { }
	/// <summary>
	/// Enter a parse tree produced by <see cref="RAGEParser.initializer"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterInitializer([NotNull] RAGEParser.InitializerContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="RAGEParser.initializer"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitInitializer([NotNull] RAGEParser.InitializerContext context) { }
	/// <summary>
	/// Enter a parse tree produced by <see cref="RAGEParser.initializerList"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterInitializerList([NotNull] RAGEParser.InitializerListContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="RAGEParser.initializerList"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitInitializerList([NotNull] RAGEParser.InitializerListContext context) { }
	/// <summary>
	/// Enter a parse tree produced by <see cref="RAGEParser.designation"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterDesignation([NotNull] RAGEParser.DesignationContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="RAGEParser.designation"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitDesignation([NotNull] RAGEParser.DesignationContext context) { }
	/// <summary>
	/// Enter a parse tree produced by <see cref="RAGEParser.designatorList"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterDesignatorList([NotNull] RAGEParser.DesignatorListContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="RAGEParser.designatorList"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitDesignatorList([NotNull] RAGEParser.DesignatorListContext context) { }
	/// <summary>
	/// Enter a parse tree produced by <see cref="RAGEParser.designator"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterDesignator([NotNull] RAGEParser.DesignatorContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="RAGEParser.designator"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitDesignator([NotNull] RAGEParser.DesignatorContext context) { }
	/// <summary>
	/// Enter a parse tree produced by <see cref="RAGEParser.selectionStatement"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterSelectionStatement([NotNull] RAGEParser.SelectionStatementContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="RAGEParser.selectionStatement"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitSelectionStatement([NotNull] RAGEParser.SelectionStatementContext context) { }
	/// <summary>
	/// Enter a parse tree produced by <see cref="RAGEParser.selectionElseStatement"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterSelectionElseStatement([NotNull] RAGEParser.SelectionElseStatementContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="RAGEParser.selectionElseStatement"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitSelectionElseStatement([NotNull] RAGEParser.SelectionElseStatementContext context) { }
	/// <summary>
	/// Enter a parse tree produced by <see cref="RAGEParser.statement"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterStatement([NotNull] RAGEParser.StatementContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="RAGEParser.statement"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitStatement([NotNull] RAGEParser.StatementContext context) { }
	/// <summary>
	/// Enter a parse tree produced by <see cref="RAGEParser.labeledStatement"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterLabeledStatement([NotNull] RAGEParser.LabeledStatementContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="RAGEParser.labeledStatement"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitLabeledStatement([NotNull] RAGEParser.LabeledStatementContext context) { }
	/// <summary>
	/// Enter a parse tree produced by <see cref="RAGEParser.compoundStatement"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterCompoundStatement([NotNull] RAGEParser.CompoundStatementContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="RAGEParser.compoundStatement"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitCompoundStatement([NotNull] RAGEParser.CompoundStatementContext context) { }
	/// <summary>
	/// Enter a parse tree produced by <see cref="RAGEParser.blockItemList"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterBlockItemList([NotNull] RAGEParser.BlockItemListContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="RAGEParser.blockItemList"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitBlockItemList([NotNull] RAGEParser.BlockItemListContext context) { }
	/// <summary>
	/// Enter a parse tree produced by <see cref="RAGEParser.blockItem"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterBlockItem([NotNull] RAGEParser.BlockItemContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="RAGEParser.blockItem"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitBlockItem([NotNull] RAGEParser.BlockItemContext context) { }
	/// <summary>
	/// Enter a parse tree produced by <see cref="RAGEParser.expressionStatement"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterExpressionStatement([NotNull] RAGEParser.ExpressionStatementContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="RAGEParser.expressionStatement"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitExpressionStatement([NotNull] RAGEParser.ExpressionStatementContext context) { }
	/// <summary>
	/// Enter a parse tree produced by <see cref="RAGEParser.iterationStatement"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterIterationStatement([NotNull] RAGEParser.IterationStatementContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="RAGEParser.iterationStatement"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitIterationStatement([NotNull] RAGEParser.IterationStatementContext context) { }
	/// <summary>
	/// Enter a parse tree produced by <see cref="RAGEParser.jumpStatement"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterJumpStatement([NotNull] RAGEParser.JumpStatementContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="RAGEParser.jumpStatement"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitJumpStatement([NotNull] RAGEParser.JumpStatementContext context) { }
	/// <summary>
	/// Enter a parse tree produced by <see cref="RAGEParser.compilationUnit"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterCompilationUnit([NotNull] RAGEParser.CompilationUnitContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="RAGEParser.compilationUnit"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitCompilationUnit([NotNull] RAGEParser.CompilationUnitContext context) { }
	/// <summary>
	/// Enter a parse tree produced by <see cref="RAGEParser.translationUnit"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterTranslationUnit([NotNull] RAGEParser.TranslationUnitContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="RAGEParser.translationUnit"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitTranslationUnit([NotNull] RAGEParser.TranslationUnitContext context) { }
	/// <summary>
	/// Enter a parse tree produced by <see cref="RAGEParser.externalDeclaration"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterExternalDeclaration([NotNull] RAGEParser.ExternalDeclarationContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="RAGEParser.externalDeclaration"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitExternalDeclaration([NotNull] RAGEParser.ExternalDeclarationContext context) { }
	/// <summary>
	/// Enter a parse tree produced by <see cref="RAGEParser.functionDefinition"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterFunctionDefinition([NotNull] RAGEParser.FunctionDefinitionContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="RAGEParser.functionDefinition"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitFunctionDefinition([NotNull] RAGEParser.FunctionDefinitionContext context) { }
	/// <summary>
	/// Enter a parse tree produced by <see cref="RAGEParser.declarationList"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterDeclarationList([NotNull] RAGEParser.DeclarationListContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="RAGEParser.declarationList"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitDeclarationList([NotNull] RAGEParser.DeclarationListContext context) { }

	/// <inheritdoc/>
	/// <remarks>The default implementation does nothing.</remarks>
	public virtual void EnterEveryRule([NotNull] ParserRuleContext context) { }
	/// <inheritdoc/>
	/// <remarks>The default implementation does nothing.</remarks>
	public virtual void ExitEveryRule([NotNull] ParserRuleContext context) { }
	/// <inheritdoc/>
	/// <remarks>The default implementation does nothing.</remarks>
	public virtual void VisitTerminal([NotNull] ITerminalNode node) { }
	/// <inheritdoc/>
	/// <remarks>The default implementation does nothing.</remarks>
	public virtual void VisitErrorNode([NotNull] IErrorNode node) { }
}
